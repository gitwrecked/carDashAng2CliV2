var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');
var mongoose = require('mongoose');
var app = express();

// var debug = require('debug')('http')
//   , http = require('http')
//   , name = 'My App';

app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(__dirname));

mongoose.connect('mongodb://localhost/test');
var db = mongoose.connection;
db.on('error', console.error.bind(console, 'mongo db connection error:'));
db.once('open', function() {
 console.log('mongo db is connected!');
});

var kittySchema = mongoose.Schema({
    name: String
});
  kittySchema.methods.speak = function () {
  var greeting = this.name
    ? "Meow name is " + this.name
    : "I don't have a name";
  console.log(greeting);
}
var Kitten = mongoose.model('Kitten', kittySchema);

app.get('/save', function (req, res) {
  var fluffy = new Kitten({ name: 'fluffy' });
  fluffy.speak();

  fluffy.save(function (err, fluffy) {
  if (err) return console.error(err);
  fluffy.speak();
});
console.log(fluffy.name);

  res.send('Hello World!')
})

app.get('/ret', function (req, res) {
Kitten.find(function (err, kittens) {
  if (err) return console.error(err);
  console.log(kittens);
})
res.send('Hello World!')
})


app.get('/hello', function (req, res) {

res.send('Hello World!')
})

  // all other routes are handled by Angular
app.get('/*', function (req, res) {
res.sendFile(path.join(__dirname,'index.html'));
});
// catch 404 and forward to error handler
app.use(function(req, res, next) {
var err = new Error('Not Found');
err.status = 404;
next(err);
});
if (app.get('env') === 'development')
{
app.listen(3000, function () {
// debug('listening in 3000 using debug');
console.log('Example app listening on port 3000!');
});
}
else{
app.listen(8080, function () {
console.log('Example app listening on port 8080!');
});
}
module.exports = app;